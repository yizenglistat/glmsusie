% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rinternal.R
\name{univariate_irls_cox}
\alias{univariate_irls_cox}
\title{Estimate Univariate Cox Model via Iteratively Reweighted Least Squares (IRLS)}
\arguments{
\item{x}{Numeric vector of length \code{n}: covariate values.}

\item{y}{Numeric matrix with shape \code{n × 2}, where:
\itemize{
\item \code{y[,1]} is the observed time
\item \code{y[,2]} is the event indicator (1 = event, 0 = censored)
}}

\item{offset}{Numeric scalar or vector of length \code{n}. Optional offset for the linear predictor.}

\item{ties}{Character string specifying the method to handle ties: \code{"breslow"} (default) or \code{"efron"}.}

\item{lambda}{Numeric penalty weight; if ≤ 0, defaults to \eqn{\sqrt{2\log(n)/n}} (default: 0.0).}

\item{tau}{Numeric truncation parameter; if ≤ 0, defaults to 0.5 (default: 0.5).}

\item{max_iter}{Integer: maximum number of IRLS iterations. Default is 25.}

\item{tol}{Numeric: convergence tolerance on parameter change. Default is 1e-8.}
}
\value{
A numeric scalar representing the estimated regression coefficient \code{theta}.
}
\description{
Fits a univariate Cox proportional hazards model by maximizing the partial
log-likelihood using an Iteratively Reweighted Least Squares (IRLS) approach.
Supports both Breslow and Efron approximations for handling ties.
}
\details{
The function starts from an initial coefficient value of 0 and updates the
slope estimate using Newton-Raphson iterations until convergence or until
reaching the maximum number of iterations. The linear predictor is
\code{lp = offset + theta * x}. The score function and observed information
are used to update the estimate.
}
\examples{
\dontrun{
x <- c(1, 2, 3, 4)
y <- matrix(c(4,1, 1,1, 3,0, 2,1), ncol = 2, byrow = TRUE)
univariate_irls_cox(x, y, offset = 0, ties = "efron", max_iter = 50, tol = 1e-6)
}
}
