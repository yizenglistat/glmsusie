% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rinternal.R
\name{single_effect_fit}
\alias{single_effect_fit}
\title{Compute Single‐Effect Fit for GLM or Cox with Optional Truncated‐L1 Penalty}
\arguments{
\item{X}{Numeric matrix (n × p) of predictors. Each column is fit separately.}

\item{y}{Response:
\itemize{
\item For GLMs: numeric vector of length n.
\item For Cox: numeric matrix with 2 columns (time, status) and n rows.
}}

\item{family}{A stats::family object (e.g. \code{gaussian()}, \code{binomial()},
\code{poisson()}) or a Cox family list with \code{family = "cox"}.}

\item{offset}{Numeric scalar or vector (length n) giving the linear predictor offset (default: 0).}

\item{standardize}{Logical: if TRUE, center and scale each predictor column before fitting (default: TRUE).}

\item{shrinkage}{Logical: if TRUE, shrinkage parameters in fitting (default: TRUE).}

\item{ties}{Character: ties method for Cox partial likelihood ("efron" or "breslow", default: "efron").}

\item{lambda}{Numeric penalty weight; if ≤ 0, defaults to \eqn{\sqrt{2\log(n)/n}} (default: 0.0).}

\item{tau}{Numeric truncation parameter; if ≤ 0, defaults to 1.0 (default: 1.0).}

\item{alpha}{level of significance}
}
\value{
A list of length p, where each element is itself a list with components:
\item{loglik}{Unpenalized log‐likelihood at the fitted coefficient.}
\item{bic}{Bayesian Information Criterion: \eqn{-2*logLik + 2\log(n)}.}
\item{bic_diff}{BIC difference from null model.}
\item{bf}{Bayes factor.}
\item{pmp}{Posterior model probability.}
\item{intercept}{Estimated intercept for that predictor.}
\item{theta}{Estimated coefficient for that predictor.}
\item{pval_intercept}{P-value for estimated intercept for that predictor.}
\item{pval_theta}{P-value for estimated coefficient for that predictor.}
\item{expect_intercept}{Expected value of intercept under model averaging.}
\item{expect_theta}{Expected value of coefficient under model averaging.}
\item{expect_variance}{Expected variance under model averaging.}
}
\description{
Applies a single‐effect model to each column of a predictor matrix using either
GLM (via IRLS + truncated‐L1) or Cox partial likelihood (via penalized IRLS).
}
\examples{
\dontrun{
set.seed(123)
n <- 80; p <- 3
X <- matrix(rnorm(n*p), n, p)
# Gaussian example
y_gauss <- X[,1] * 1.2 + rnorm(n)
res_glm <- single_effect_fit(X, y_gauss, family = gaussian())

# Cox example
times <- rexp(n, rate = exp(0.5 * X[,2]))
status <- rbinom(n, 1, 0.7)
y_cox <- cbind(time=times, status=status)
res_cox <- single_effect_fit(X, y_cox, family = list(family="cox"))
}
}
